definitions:
  piyo-engine_api_v1.CreateTeamRequest:
    properties:
      desc:
        type: string
      name:
        example: PMR Fansub
        maxLength: 20
        minLength: 3
        type: string
      qq_group_id:
        type: string
      team_id:
        example: pmr
        maxLength: 20
        minLength: 3
        type: string
    required:
    - name
    - team_id
    type: object
  piyo-engine_api_v1.GetProfileResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/piyo-engine_api_v1.GetProfileResponseData'
      message:
        type: string
    type: object
  piyo-engine_api_v1.GetProfileResponseData:
    properties:
      created_at:
        type: string
      nickname:
        example: alan
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
  piyo-engine_api_v1.GetTeamMembersResponseData:
    properties:
      members:
        items:
          $ref: '#/definitions/piyo-engine_api_v1.TeamMemberProfile'
        type: array
    type: object
  piyo-engine_api_v1.GetTeamProfileResponseData:
    properties:
      created_at:
        type: string
      desc:
        type: string
      name:
        type: string
      qq_group_id:
        type: string
      status:
        type: integer
      team_id:
        type: string
    type: object
  piyo-engine_api_v1.LoginRequest:
    properties:
      email:
        example: 1234@gmail.com
        type: string
      password:
        example: "123456"
        type: string
      username:
        example: foo
        maxLength: 30
        type: string
    required:
    - password
    type: object
  piyo-engine_api_v1.LoginResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/piyo-engine_api_v1.LoginResponseData'
      message:
        type: string
    type: object
  piyo-engine_api_v1.LoginResponseData:
    properties:
      access_token:
        type: string
    type: object
  piyo-engine_api_v1.RegisterRequest:
    properties:
      email:
        example: 1234@gmail.com
        type: string
      password:
        example: "123456"
        type: string
      username:
        example: foo
        maxLength: 30
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
  piyo-engine_api_v1.Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  piyo-engine_api_v1.TeamMemberProfile:
    properties:
      created_at:
        type: string
      joined_at:
        type: string
      nickname:
        example: alan
        type: string
      user_id:
        type: string
      username:
        type: string
    type: object
  piyo-engine_api_v1.UpdateProfileRequest:
    properties:
      email:
        example: 1234@gmail.com
        type: string
      nickname:
        example: alan
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A more powerful task management system for fansub
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Piyo Engine API
  version: 1.0.0
paths:
  /team:
    post:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/piyo-engine_api_v1.CreateTeamRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/piyo-engine_api_v1.Response'
      summary: 新建团队
      tags:
      - 团队模块
  /team/{team_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/piyo-engine_api_v1.GetTeamProfileResponseData'
      summary: 获取团队信息
      tags:
      - 团队模块
  /team/{team_id}/members:
    get:
      consumes:
      - application/json
      parameters:
      - description: Team ID
        in: path
        name: team_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/piyo-engine_api_v1.GetTeamMembersResponseData'
      summary: 获取团队成员列表
      tags:
      - 团队模块
  /user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/piyo-engine_api_v1.GetProfileResponse'
      security:
      - Bearer: []
      summary: 获取用户信息
      tags:
      - 用户模块
    put:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/piyo-engine_api_v1.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/piyo-engine_api_v1.Response'
      security:
      - Bearer: []
      summary: 修改用户信息
      tags:
      - 用户模块
  /user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/piyo-engine_api_v1.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/piyo-engine_api_v1.LoginResponse'
      summary: 账号登录
      tags:
      - 用户模块
  /user/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/piyo-engine_api_v1.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/piyo-engine_api_v1.Response'
      summary: 用户注册
      tags:
      - 用户模块
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
